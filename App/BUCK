load("//Config:configs.bzl", "app_binary_configs", "info_plist_substitutions", "library_configs")
load("//Config:buck_rule_macros.bzl", "apple_test_all")

first_party_dependencies = [
    "//Libraries/WeatherForecastUI:WeatherForecastUI",
    "//Libraries/WeatherForecastCore:WeatherForecastCore",
    "//Libraries/WeatherForecastNetworking:WeatherForecastNetworking",
]

apple_asset_catalog(
    name = "WeatherForecastAppAssets",
    app_icon = "AppIcon",
    visibility = ["//App:"],
    dirs = ["Assets.xcassets"],
)

apple_library(
    name = "WeatherForecastLibrary",
    configs = library_configs(),
    srcs = [
        "AppDelegate.swift",
    ],
    deps = [
        # First party dependecies
        "//Libraries/WeatherForecastUI:WeatherForecastUI",

        # Third party dependecies
        "//Vendor/SwinjectStoryboard:SwinjectStoryboard",

        # Resources
        "//App/Resources:Storyboard",
        "//App/Resources:Strings",
        "//App/Resources:XIBs",

        # Assets
        ":WeatherForecastAppAssets",
    ],
    visibility = [
        "//App:",
        "//App/...",
    ],
)

apple_test_all(
    name = "WeatherForecastAppTests",
    libraries = first_party_dependencies,
)

apple_binary(
    name = "WeatherForecastBinary",
    configs = app_binary_configs("WeatherForecast"),
    deps = [
        ":WeatherForecastLibrary",
    ],
    srcs = [
        "BuckSupportFiles/Dummy.swift",
    ],
    frameworks = [
        "$SDKROOT/System/Library/Frameworks/UIKit.framework",
        "$SDKROOT/System/Library/Frameworks/Foundation.framework",
    ],
)

apple_bundle(
    name = "WeatherForecast",
    extension = "app",
    binary = ":WeatherForecastBinary",
    info_plist = "Info.plist",
    info_plist_substitutions = info_plist_substitutions("WeatherForecast"),
)

apple_package(
    name = "WeatherForecastPackage",
    bundle = ":WeatherForecast",
)
